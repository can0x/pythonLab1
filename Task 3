#Write a Python-script that determines whether the input string is the correct entry for the 'formula' according EBNF syntax (without
#using regular expressions).

#Formula = Number | (Formula Sign Formula)
#Sign = '+' | '-'
#Number = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'
#Input: string
#Result: (True / False, The result value / None)
#Example,
#user_input = '1+2+4-2+5-1' result = (True, 9)
#user_input = '123' result = (True, 123)
#user_input = 'hello+12' result = (False, None)
#user_input = '2++12--3' result = (False, None)
#user_input = '' result = (False, None)

import sys
numbers = '0123456789'
sign = '-+'

def formula(string):
    index = 1
    for input in string:
        if input in numbers:
            index = 1
        elif index and input in sign:
            index = 0
        elif index == 1 and (input == '(' or ')'):
            index = 10
        else:
            return 0
    if index:
        return 1
    return 0

solution = ''
for index in range(1, len(sys.argv)):
    solution += sys.argv[index]
if formula(solution):
    print('(True, {})'.format(eval(solution)))
else:
    print('(False, None)')
